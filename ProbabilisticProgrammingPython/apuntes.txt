Curso de introducción al pensamiento proabilistico

Introducción a la programación probabilística

Utiliza probabilidades y modelos probabilisticos para ejecutar computos.

Se utiliza en una gran cantidad de campos: investigación científica, inteligencia artificial, medicina, etc.

Existen lenguajes y librerías especializadas para ejecutar este tipo de cómputo, como pyro de uber

Que juan sea un músico o que sea un músico y que use drogas. 
Pero la probabilidad es menos, al incluir un subconjunto (&) por lo que no puede ser más grande que el conjunto principal. 


-Probabilidad Concicional

La probabilidad para tener 2 cruces es 1/4  P(t & t) = P(t) P(t) 1/2 * 1/2 = 1/4


La probabilidad de a y b P(A&B) = P(A) P(B|A)

P(B) = P(A)P(B|A) + P(No- A) P(B|No-A)
P(cancer) = P(Positivo)P(Cancer|postiivo)+P(negativo)P(cancer|negativo)
-Probabilidad condicional, no son elementos independientes
P(JuanUseDrogas) = P(musico)P(drogas|musico)+P(NoMñusico)P(drogas|NoMúsico)

-Teorema de Bayes
Él se interesó por la probabilidad, ejemplo de la pelota, la pregunta que surge es como se aproxima al resultado. 

Lo importante es no tender a las conclusiones, en el ejemplo de juan, la poblaciónde MBA es mayor a la de ingeniería. 
Por lo que tendríamos un nuevo universo


-Análisis de síntomas


Aplicaciones del Teorema de Bayes

El Teorema de Bayes es uno de los mecanismos matemáticos más importantes en la actualidad. A grandes rasgos, nos permite medir nuestra certidumbre con respecto a un suceso tomando en cuenta nuestro conocimiento previo y la evidencia que tenemos a nuestra disposición. El Teorema de Bayes permea en tu vida diaria, desde descubrimientos científicos hasta coches autónomos, el Teorema de Bayes es el motor conceptual que alimenta mucho de nuestro mundo moderno.
​
En esta lectura me gustaría darte ejemplos de cómo se utiliza en la vida moderna para que puedas comenzar a implementarlo en tus proyectos, análisis y hasta en
tu vida personal.
​
Turing y el código enigma de los Nazis


Casi todos sabemos que Alan Turing es uno de los padres del cómputo moderno; pocos saben que fue gracias a él que los aliados pudieron tener una ventaja decisiva cuando Turing logró descifrar el código enigma que encriptaba todas las comunicaciones nazis; pero aún menos saben que para romper este código utilizó el Teorema de Bayes.
​
Lo que hizo Turing fue aplicar el Teorema para descifrar un segmento de un mensaje, calcular las probabilidades iniciales y actualizar las probabilidades
de que el mensaje era correcto cuando nueva evidencia (pistas) era presentada.
​
Finanzas


Una de las decisiones más difíciles cuando estás manejando un portafolio de inversión es determinar si un instrumento financiero (acciones, valores, bonos, etc.) se va a apreciar en el futuro y por cuánto, o si, por el contrario se debe vender el instrumento. Los portafolios managers más exitosos utilizan el Teorema de Bayes para analizar sus portafolios.
​
En pocas palabras, puedes determinar las probabilidades iniciales basándote en el rendimiento previo de tu portafolio o en el rendimiento de toda la bolsa y
luego añadir evidencia (estados financieros, proyecciones del mercado, etc.) para tener una mayor confianza en las decisiones de venta o compra.
​
Derecho

El Derecho es uno de los campos más fértiles para aplicar pensamiento bayesiano. Cuando un abogado quiere defender a su cliente, puede comenzar a evaluar una probabilidad de ganar (basada en su experiencia previa, o en estadísticas sobre el número de juicios y condenados con respecto del tema legal que competa) y actualiza su probabilidad conforme vayan sucediendo los eventos del proceso jurisdiccional.
​
Cada nueva notificación, cada prueba y evidencia que encuentre, etc. sirve para actualizar la confianza del abogado.
​
Inteligencia artificial

El Teorema de Bayes es central en el desarrollo de sistemas modernos de inteligencia artificial. Cuando un coche autónomo se encuentra navegando en las calles, tiene que identificar todos los objetos que se encuentran en su “campo de visión” y determinar cuál es la probabilidad de tener una colisión. Esta probabilidad se actualiza con cada movimiento de cada objeto y con el propio movimiento del vehículo autónomo. Esta constante actualización de probabilidades es lo que permite que los vehículos autónomos tomen decisiones
acertadas que eviten accidentes.
​
En esta rama existen muchos ejemplos como para cubrirlos todos, pero quiero por lo menos mencionar algunos casos de uso: filtros de spam, reconocimiento de voz, motores de búsqueda, análisis de riesgo crediticio, ofertas automáticas, y un largo etcétera.
​
Para terminar, me gustaría compartir una cita del famoso economista John Maynard Keynes que resume perfectamente el tipo de pensamiento que quiero que desarrolles: “Cuando los hechos cambian, yo cambio mi opinión. ¿Qué hace usted, señor?”


-Garbage in, garbage out (GIGO)
Primer error de pensamiento si no aprendemos cuando estamos frente a estos errores
Si le avientas basura recibes basura

La calidad de nuestrso datos es igual de fundametnal que la precisión de nuestros cómputos

Cuando los datos son errados, aunque tengamos un cómputo prístino nuestos resultados serán erróneos

En pocas palabras: con datos errados las conclusiones serán erradas. 

*Las máquinas se crearon para hacer censos.
Charles Babbage

-Imágenes engañosas
Las visualizaciones son muy importantes para entender un conjunto de datos.

Sin embargo, cuando se juega con la escala se puede llegar a conclusiones incorrectas.

Nunca se debe confiar en una gráfica sin escalas o etiquetas. 

Cum Hoc Ergo Propter Hoc (Falacia)
-Dos variables están positivamente correlacionadas cuando se mueven en la misma
dirección y negativamente correlacionadas, cuando se mueven en direcciones opuestas

Correlación no implica causalidad.

Pueden existir variables escondidas que generen la Correlación

Después de esto, eso; entonces a consecuencia de esto, eso 
El error es asignar causalidad cuando solo se tiene correlación
Para librarse de el, se necesita pensar out of the box

-Prejuicio en el muestreo

Para que un muestreo pueda servir como base para la inferencia estadística tiene
que ser aleatorio y representativo.

El prejuicio en el muestreo elimina la representatividad de las muestras

A veces conseguir muestras, es dificilm, por lo que se utiliza a la población 
de más fácil acceso (caso estudios universitarios)

Falacia del francotirador de texas

Esta falacia se da cuando no se toma la aleatoriedad en consideración

También sucede cuando uno se enfoca en las similitudes e ignora las diferencias

Cuando fallamos al tener una hipótesis antes de recolectar datos, estamos en alto riesgo
de caer en esa falacia( muy común en Data Science)

-Emprendedor serial, sólo se enfoca en las que funcionaron y olvida las que no

-Porcentajes confusos

Cuando no sabemos la cuenta total del cual se obtiene un porcentaje tenemos el riesgo 
de concluír falsos resultados

Siempre es importante ver el contexto

Los porcentajes, en vacío, no significan mucho.

Ejemplos: 
Escuela A incrementó su rendimiento en 25%
Escuela B incrementó su rendimiento en 10%
Escuela C incrementó su rendimiento en 5%

No hay que apresurarnos a las conclusiones, debido a falta de contexto
Hay que preguntarnos el contexto

En 1970, 12.5 millones de jóvenes vivían con sus padres
En 2015 esta cifra se incrementó a 18.6 millones
¿Esto presenta un incremento del 48?

Falacia de regresión
Muchos eventos flutñuna naturalmente, por ejemplo, la temperatura promedio de una causalidad
el rendimiento de un atleta, los rendimientos de un portafolio de inversión etc.

Cuando algo fluctúa y se aplican medidas correctivas se puede creer que existe un vínculo
de causalidad en lugar de una regresión a la media. 

- Introducción Machine Learning

Historia, "Es el campo de estudio que le da a las computadoras la habilodad de aprender
sin ser explícitamente programadas " Arthur Samuel, 1959
*Detección de patrones, tendencias.

Alan Turing -> Marvin Minski (primera red neuronal)
1952 Arthur Samuel (programa de damas chinas)
Frank Rosenvlat (creador del perceptron)
1963 Donal Michel (Red adversarial) jugar o probar para automatizar
1967 Nearest Neighbors (detectar patrones apartir de datos que ya existen)
Marvin Minsky(libro de perceptron) 
Stanford Cart 
1992 Juego automático de bagamon o vagamon
Deep blue, derrotó a Gary Kasparov
1998 eminist (Hello World de machine learning) dataset de reconocimiento de números
2009 fei fei lee, liberó el dataset de image

2012 youtube, gatitos,
2014 facebook, algoritmo de reconocimiento facial.
2016 go alpha-go

Machine learning se utiliza cuando: 
Programar un algoritmo es imposible
El problema es muy complejo o no se conocen algoritmos para resolverlo
Ayuda a los humanos a entender patrones(Data Mining)

Aprendizaje supervisado vs no supervisado vs semisupervisado (etiquetado)

Batch vs online learning

-Feature vectors
 Se utilizan para representar características simbólicas o numéricas llamadas features
 Permiten analizar un objeto desde una perspectiva matemática.
 Los algoritmos de machine learning típicamente requieren representaciones
 numéticas para poder ejecutar el cómputo.
 Uno de los feature vectors más conocidos es la representación del color a través del RGB
 -Color = [R, G, B] 0,255

 Procesamiento de imagenes:
 Gradientes, bordes, áreas, colores, etc.

 Reconocimiento de voz:
 Distancia de sonidos, nivel de ruido, razón ruido / señal etc

 Spam:
 Dirección IP, estructura del texto, frecuencia de palabras, 
  encabezados, etc.  

-Métricas de Distancia


Introducción al agrupamiento (clustering)

Es un proceso mediante el cual se agrupan objetos similares en clusters que los identifican
Se clasifica como aprendizaje no supervisado ya que norequiere la utilización de etiquetas
Permite entender la estructura de los datos y la similitud entre los mecanismos
Es utilizado en motores de recomendación, análisis de redes sociales, 
análisis de riesgo crediticio, clasificación de genes, riesgos, médicos, etc.

Agrupamiento jerárquico

Es un algoritmo que agrupa objetos similares en grupos llamados clusters
El algoritmo comienza teatando a cada objeto como un cluster individual y luego realiza
los siguientes pasos de manera recursiva:
-Identifica los dos clusters con menor distancia(los más similares)
-Agrupa los dos clusters en uno nuevo

El output final es un dendograma que muestra la relación entre objetos y grupos.
Es importante determinar que medida de distancia, vamos a utilizar
y los puntos a utilizar en cada cluster(linkage criteria)

K means

Es un algoritmo que agrupa utilizando centroides.

El algoritmo funciona asignando puntos al azar(K define le número inicial de clusters) y después:
    En cada iteración el punto se ajusta a su nuevo centroide y cada punto
    se recalcula con la distancia con respecto de los centroides.

    Los puntos se reasignan al nuevo centro

    El algoritmo se repite de manera iterativa hasta que ya no existen mejoras


    ¿Qué son las técnicas de agrupamiento?

​
El agrupamiento es una técnica de Machine Learning que consiste, en pocas palabras, en dividir cierta población en grupos con la consecuencia de que los datos en un grupo sean más similares entre ellos que comparado con los otros grupos.
​
Imagina que eres el dueño de una startup que hace e-commerce y quieres tener estrategias de venta para tus clientes. Es casi imposible diseñar una estrategia por cada individuo, pero se puede utilizar el agrupamiento para dividir a los clientes en grupos que tengan similitudes relevantes y así reducir el problema a unas cuantas estrategias.
​
Tipos de agrupamiento

Existen dos tipos de agrupamiento:
​

    Agrupamiento estricto (hard clustering): cada dato pertenece a un grupo u otro, no hay puntos medios.
    Agrupamiento laxo (soft clustering): en lugar de asignar un dato a un grupo, se asignan probabilidades a cada dato de pertenecer o no a un grupo.
    ​
    Un punto muy importante que debes considerar cuando ejecutas técnicas de agrupamiento es que debes definir muy claro a qué te refieres cuando hablas de similitud entre puntos, porque esto puede ayudarte a definir el algoritmo correcto para tus necesidades particulares.
    ​

Modelos para determinar similitudes

A grandes rasgos, existen cuatro aproximaciones para definir similitud:
​

    Modelos conectivos: asumen que los puntos más similares son los que se encuentran más cercanos en el espacio de búsqueda. Recuerda que este espacio puede ser altamente dimensional cuando tus feature vectors definen muchas características a analizar. Una desventaja de este tipo de modelos es que no escalan para conjuntos de datos grandes, aunque es posible utilizar una muestra y aplicar técnicas de estadística inferencial para obtener resultados.
    Modelos de centroide: definen similitud en términos de cercanía con el centroide del grupo. Los datos se agrupan al determinar cuál es el centroide más cercano.
    Modelos de distribución: trata de asignar probabilidades a cada dato para determinar si pertenecen a una distribución específica o no (por
    ejemplo, normal, binomial, Poisson, etc.).
    Modelos de densidad: analizan la densidad de los datos en diferentes regiones y dividen el conjunto en grupos, luego asignan los puntos de acuerdo a las áreas de densidad en las que se haya dividido el dataset.
    ​
    Acuérdate de no casarte con un modelo específico. Muchas de las mejores Ingenieras de Machine Learning y Científicas de Datos utilizan varios modelos con el mismo conjunto de datos para analizar el rendimiento de los diversos algoritmos que tienen a su disposición. Así que experimenta y siempre compara tus resultados antes de tomar una decisión.


Introducción a la clasificación

Es el proceso mediante el cual se predice la clase de cierto dato. 
Es un tipo de aprendizaje supervisado ya que para que 
funcione, se necesitan etiquetas con los datos(labels)

Se utiliza en muchos dominios, incluyendo la medicina, aprobación
crediticia, reconocimiento de imágenes, vehículos autónomos, entre otros.

Sigue dos pasos: aprendizaje(creación de modelo) y clasificación 

Clasificación K-nearest Neighbors

Parte del supuesto de que ya teemos un conjunto de datos clasificado.

Trata de encontrar los "vecinos más cercanos"

K se refiere a la cantidad de vecinos que se utilizarán para clasificar
un ejemplo que aún no ha sido clasificado

Es sencillo de implementar y tiene aplicaciones en medicina, finanzas, agricultura, etc.

Es computacionalmente muy costoso y no sirve con datos de alta dimensionalidad

 Técnicas de clasificación

​
La clasificación es un tipo de Machine Learning supervisado. Esto significa que para entrenar un modelo necesitamos un conjunto de datos (dataset) que ya tenga etiquetas (labels) para poder entrenar nuestros modelos.
​
La mejor forma de pensar en algoritmos de clasificación es pensar en el sombrero clasificador de Harry Potter. Cuando un nuevo alumno de Hogwarts entra a la escuela es necesario asignarlo/clasificarlo en una de las 4 casas. El sombrero obtiene los datos cuando se lo coloca el alumno y define cuál es el mejor match para su caso particular. Aquí estamos asumiendo que el sombrero es un algoritmo que ya ha sido entrenado y que los alumnos son nuevos data points que tienen que ser clasificados.
​
Clasificadores lineales

​
Estos tipos de clasificadores se distinguen porque dividen el conjunto de datos con una línea (que puede ser multidimensional dependiendo de la cantidad de features que hemos utilizado para definir a nuestros datos). Esto genera áreas dentro de nuestro espacio de búsqueda para que cuando coloquemos un nuevo dato podamos clasificarlo fácilmente.
​
El problema con este tipo de modelos es que son pocos flexibles cuando el conjunto de datos no puede ser separado fácilmente con una simple línea; por ejemplo, cuando necesitáramos una figura más compleja para dividirlo (como un polígono).
​
Regresión logística

​
Estos algoritmos se parecen mucho a los clasificadores lineales, con la diferencia de que no se divide simplemente con una línea, sino con un gradiente que determina la probabilidad de que un punto pertenezca a una categoría u otra. Es decir, la gradiente determina la probabilidad de que un punto sea asignado a una categoría y mientras un dato se aleje más en una dirección será mayor la probabilidad de que pertenezca a una categoría.
​
Imagina que estos algoritmos generan un área difusa en la que no estamos seguros de la clasificación y un área clara en la que tenemos un alto grado de certeza
en cuanto a la categoría que pertenece un punto.
​
Nearest neighbor

​
Los modelos que utilizan nearest neighbor se apoyan de los datos que ya han sido clasificados para determinar la distancia entre sus “vecinos más cercanos.” El algoritmo más común que utiliza esta técnica se llama K-nearest neighbors y la K representa el número de vecinos que se utilizarán para clasificar los datos. En pocas palabras, se identifican los datos más cercanos y en el caso más sencillo se hace una votación simple (por ejemplo, 5 azules, 2 rojos, por lo tanto azul).
​
Una característica de estos modelos es que “dibujan” una línea que se asemeja a una costa para clasificar los datos. Mientras K sea más grande la “línea costera” se alisa y se asemeja más y más a una línea simple. Por lo tanto, la definición de K tiene un impacto importante en el desempeño de nuestro algoritmo de clasificación.
​
Support Vector Machines

​
Estos algoritmos se diferencian por tener la habilidad de generar figuras complejas (polígonos) que pueden agrupar datos. Si la figura que tendríamos que dibujar para dividir nuestros datos es diferente a una línea (círculos, polígonos, etc.), entonces estos modelos son una buena opción.
​
Árboles de decisión

​
Este tipo de algoritmos nos permiten generar una árbol que tenemos que recorrer y tomar decisiones cada vez que avanzamos en un nivel. Por ejemplo:
​

    Si un feature en análisis es mayor a 5, dibuja la línea y=2x+3, de lo contrario dibuja y=-3x+5
    Si el feature siguiente es menor a 2, dibuja otra línea y así sucesivamente.
    ​

Conclusiones

​
Recuerda que la decisión de qué algoritmo utilizar depende de la forma en la que tengas tus datos y la precisión que desees obtener (a cambio de excluir o incluir falsos positivos y negativos). Otro punto a considerar es que estos algoritmos deben ser entrenados con datos previos y la calidad de estos datos y del modelo subsecuente importan mucho para obtener la mejor clasificación.
​
Te invito a que consultes la documentación de Scikit-learn para que puedas profundizar en la forma en que funcionan estos algoritmos (y muchos otros) y puedas saber qué tipo de parámetros se pueden ajustar y cuál es la forma de los datos que esperan. Aquí está el vínculo a la documentación

¡Compártenos tus descubrimientos!